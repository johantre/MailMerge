name: jira-version-actions
on:
  push:
    paths:
      - 'env/prod.jira.releases.releasedate.properties'
      - 'payload/releases.json'
env:
  MAILUSER: ${{ secrets.MAIL_USER }}
  MAILPASS: ${{ secrets.MAIL_PASS }}
  JIRAUSER: ${{ secrets.JIRA_USER }}
  JIRAPASS: ${{ secrets.JIRA_PASS }}
jobs:
  changedfiles-new-releases-job:
    runs-on: [atc-ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get changed file env/prod.jira.releases.releasedate.properties
        id: changed-new-releases-properties
        uses: tj-actions/changed-files@v24
        with:
          files: env/prod.jira.releases.releasedate.properties
      - name: Run step if env/prod.jira.releases.releasedate.properties has changed -> New Jira version!
        if: steps.changed-new-releases-properties.outputs.any_changed == 'true'
        run: bash ./actions/server/createRequestedVersions.sh
        shell: bash
      - name: Get changed file payload/releases.json
        id: changed-updated-releases-json
        uses: tj-actions/changed-files@v24
        with:
          files: payload/releases.json
      - name: Run step if payload/releases.json has changed -> Update existing Jira version!
        if: steps.changed-updated-releases-json.outputs.any_changed == 'true'
        run: echo 'actions/server/updateChangedVersion.sh'
        shell: bash
